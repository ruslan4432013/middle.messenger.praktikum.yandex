events {
    worker_connections  1024;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout 300;
    gzip_disable "msie6";

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name ya-chat.rodrigo-hub.ru;
        server_tokens off;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }
    server {
        # listen on port 80
        listen 443 ssl;
        server_name ya-chat.rodrigo-hub.ru www.ya-chat.rodrigo-hub.ru;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        ssl_certificate /etc/letsencrypt/live/sm-universe.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sm-universe.ru/privkey.pem;

        if ($server_port = 80) { set $https_redirect 1; }
        if ($host ~ '^www\.') { set $https_redirect 1; }
        if ($https_redirect = 1) { return 301 https://ya-chat.rodrigo-hub.ru$request_uri; }
        # save logs here
        access_log /var/log/nginx/access.log compression;
        # what file to server as index
        root /var/www;
        index index.html index.htm;


        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }
        # Media: images, icons, video, audio, HTC
        location ~*
        \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 7d;
            access_log off;
            add_header Cache-Control "public";
        }
        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 7d;
            access_log off;
            add_header Cache-Control "public";
        }
        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
